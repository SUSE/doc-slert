<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
                 type="text/xml" 
                 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<article version="5.0" xml:id="article-hardware-testing" xml:lang="en"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:its="http://www.w3.org/2005/11/its"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>&slertabbr; Hardware Testing</title>
 <info><productname>&productname;</productname>
  <productnumber>&productnumber;</productnumber>
  <date><?dbtimestamp?></date>
  <meta name="title" its:translate="yes">&slertabbr; Hardware Testing</meta>
  <meta name="series" its:translate="no">Products &amp; Solutions</meta>
  <meta name="description" its:translate="yes">How to identify real-time capable hardware with the cyclictest and hwlatdetect tools</meta>
  <meta name="social-descr" its:translate="yes">Identify real-time capable hardware</meta>
  <meta name="task" its:translate="no">
    <phrase>Administration</phrase>
    <phrase>Configuration</phrase>
  </meta>
  <revhistory xml:id="rh-article-hardware-testing">
    <revision>
      <date>2024-06-26</date>
      <revdescription>
        <para>
          Updated for the initial release of &productname; &productnumber;.
        </para>
      </revdescription>
    </revision>
  </revhistory>
  <abstract>
   <para>
    Using &productnamereg; needs real-time capable hardware. This paper
    describes the tools that can be used to determine if a specific hardware
    has the needed real-time capabilities. Specifically, it describes
    <systemitem>cyclictest</systemitem> and <quote>hardware latency
    detector</quote> and the ways to analyze their results.
   </para>

   <para>
    Both the <systemitem>cyclictest</systemitem> and the <quote>hardware
    latency detector</quote> are parts of the &productname; product.
   </para>
  </abstract>
 </info>

 <sect1 xml:id="sec-hwtest-basics">
  <title>General testing procedure and analysis</title>

  <para>
   The first task you need to do when evaluating hardware for real-time is
   described in the following procedure:
  </para>

  <procedure>
   <step>
    <para>
     Determine the largest allowable latency of the system using the hardware
     latency detector:
    </para>
    <substeps>
     <step>
      <para>
       Set the machine for real-time performance.
      </para>
      <para>
       Some servers have special settings for real-time, but they are strictly
       vendor specific.
      </para>
     </step>
     <step>
      <para>
       Set everything to lowest possible latency.
      </para>
     </step>
     <step>
      <para>
       Turn memory scrubbing down to as little as possible.
      </para>
     </step>
     <step>
      <para>
       Use the hardware latency detector (see
       <xref linkend="sec-hwtest-hwlat"/> for details).
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Check the latencies measured by the hardware latency detector.
    </para>
    <para>
     The latencies should be low enough to support your real-time application
     with enough of a margin to meet its deadlines. If it is not the case, even
     after tweaking the machine setting for better real-time performance, the
     hardware is not good enough for your application. Use a different
     hardware.
    </para>
   </step>
   <step>
    <para>
     Measure latencies using <command>cyclictest</command> (see
     <xref linkend="sec-hwtest-cyct"/> for details).
    </para>
    <para>
     In a typical situation <!--, when &productname; works without any problems,-->
     the latencies measured with <command>cyclictest</command> should be mostly
     the same from those measured by the hardware latency detector. Latencies
     measured by <command>cyclictest</command> include the latencies caused by
     the operating system and are thus closer to latencies measured in a real
     computing situation.
    </para>
   </step>
  </procedure>

  <para>
   If you encounter a significant difference between latencies measured by both
   methods there might be a software bug involved. Such latencies are a
   significant part caused by the operating system, not the hardware. In such a
   case, contact &suse; for support.
  </para>
 </sect1>
 <sect1 xml:id="sec-hwtest-cyct">
  <title>Determining latencies with <command>cyclictest</command></title>

  <para>
   The <command>cyclictest</command> command is part of the real-time kernel
   test suite contained in the <package>rt-tests</package> RPM package. This
   package is distributed as part of &productname;.
  </para>

  <para>
   Make sure to be &rootuser; or use <command>sudo</command> to run
   <command>cyclictest</command>.
  </para>

  <para>
   When <command>cyclictest</command> is running, it shows the number of cycles
   performed and the minimal, actual, average and maximum latency measured. To
   change the behaviour of <command>cyclictest</command>, the following list
   gives you an overview of the available options:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     The values shown are in microseconds. To use nanoseconds instead of
     microseconds, use the <!--<option>-N</option> or -->
     <option>--nsec</option> option.
    </para>
   </listitem>
   <listitem>
    <para>
     By default, <command>cyclictest</command> runs forever. The number of
     cycles can be limited with the
     <option>--loops=<replaceable>NUMBER_OF_CYCLES</replaceable></option>
     option.
    </para>
   </listitem>
   <listitem>
    <para>
     By default, only one thread is run. You can use the <!--<option>-t
       <replaceable>NUMBER_OF_THREADS</replaceable></option> or -->
     <option>--threads=<replaceable>NUMBER_OF_THREADS</replaceable></option>
     option to set the number of threads used. Without specifying a number, all
     available processors are used. With the <!--<option>-a</option> or -->
     <option>--affinity</option> option, the threads are pinned to the
     processors with the same number.
    </para>
   </listitem>
   <listitem>
    <para>
     To create a histogram with the <!--measured--> latency values, use the
     <option>--histogram=<replaceable>NUMBER_OF_MICROSECONDS</replaceable></option>
     option, where <replaceable>NUMBER_OF_MICROSECONDS</replaceable> determines
     the maximum tracking time. Larger values are reported as histogram
     overflows. The histogram is written to standard out (STDOUT), but you can
     redirect it to a file:
    </para>
<screen><command>cyclictest</command> --loops=1000 \
--histogram=1000 > histogram</screen>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="sec-hwtest-hwlat">
  <title>Determining latencies with the hardware latency detector</title>

  <para>
   The <emphasis>hardware latency detector</emphasis>
   (<command>hwlatdetect</command>) is a program that controls the kernel
   latency detector module (<filename>hwlat_detector.ko</filename>), installed
   with the real-time debug kernel (the <package>kernel-rt_debug</package>
   package). This is a special kernel module that is used to detect large
   system latencies, caused by the behavior of the underlying hardware or
   firmware, independent of Linux itself (system management interrupts, SMIs).
  </para>

  <para>
   The hardware latency detector module works by making all CPUs busy for
   configurable amounts of time. This is done by calling
   <systemitem class="other" otherclass="function">stop_machine()</systemitem>,
   polling the CPU Time Stamp Counter (TSC) for some period, and then looking
   for gaps in the TSC data. These gaps indicate times when the polling was
   disturbed by SMIs.
  </para>

  <para>
   To start using hardware latency detector, use as
   <systemitem class="username">root</systemitem>:
  </para>

<screen>hwlatdetect --threshold=10</screen>

  <para>
   The <literal>threshold</literal> value is the minimum latency value to be
   considered in microseconds. Use the value which is relevant for your
   particular situation.
  </para>

  <para>
   <command>hwlatdetect</command> has the following options:
  </para>

  <variablelist>
   <varlistentry>
    <term><literal>--duration="<replaceable>VALUE</replaceable>"{s,m,h,d,w}</literal></term>
    <listitem>
     <para>
      Run the detector logic for the specified duration.
      Provide the duration as a decimal integer value.
      The default duration unit for this value is seconds.
      To use a different unit, append <literal>m</literal> (minutes),
      <literal>h</literal> (hours), <literal>d</literal> (days), or
      <literal>w</literal> (weeks) to the value.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><literal>--threshold="<replaceable>VALUE</replaceable>"{us,ms,s}</literal></term>
    <listitem>
     <para>
      Specify the TSC gap used to detect an SMI. Any gap value greater than
      threshold value is considered to be the result of an SMI occurring.
      The default duration unit for this value is microseconds.
      To use a different unit, append <literal>ms</literal> (milliseconds) or
      <literal>s</literal> (seconds) to the value.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><literal>--hardlimit="<replaceable>VALUE</replaceable>"{us,ms,s}</literal></term>
    <listitem>
     <para>
      The test is considered to have failed if a value above the hard limit
      value occurs.
      The default duration unit for this value is microseconds.
      To use a different unit, append <literal>ms</literal> (milliseconds) or
      <literal>s</literal> (seconds) to the value.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><literal>--window="<replaceable>VALUE</replaceable>"{us,ms,s}</literal></term>
    <listitem>
     <para>
      Specify the size of the sample window.
      The default duration unit for this value is microseconds.
      To use a different unit, append <literal>ms</literal> (milliseconds) or
      <literal>s</literal> (seconds) to the value.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><literal>--width="<replaceable>VALUE</replaceable>"{us,ms,s}</literal></term>
    <listitem>
     <para>
      The amount of time within the sample window where the detector is
      actually sampling. Must be less than the <literal>--window</literal>
      value.
      The default duration unit for this value is microseconds.
      To use a different unit, append <literal>ms</literal> (milliseconds) or
      <literal>s</literal> (seconds) to the value.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><literal>--report=<replaceable>FILE_NAME</replaceable></literal></term>
    <listitem>
     <para>
      Specify the output file name of the detector report. The default behavior
      is to print to standard output.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><literal>--debug</literal></term>
    <listitem>
     <para>
      Turn on debug output
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><literal>--quiet</literal></term>
    <listitem>
     <para>
      Turn off information output.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><literal>--watch</literal></term>
    <listitem>
     <para>
      Print sample data to stdout as it arrives.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>

 <sect1 xml:id="sec-hwtest-more">
  <title>More information</title>

  <para>
   For more information on <command>cyclictest</command>, see <command>man 8
   cyclictest</command>.
  </para>
  <para>
   For more information on the hardware latency detector, see
   <filename>/usr/src/linux/Documentation/hwlat_detector.txt</filename>.
  </para>
 </sect1>

 <xi:include href="common_copyright_quick.xml" parse="xml"/>
 <xi:include href="common_gfdl1.2_i.xml" parse="xml"/>
</article>
